#ifndef CAPN_TEST_CAPNP
#define CAPN_TEST_CAPNP
#include "../c/capn.h"
/* AUTOGENERATED - DO NOT EDIT */

struct TestInterface_testMultiRet_ret;
struct TestInterface;
struct TestInterface_vt;
enum TestEnum;
enum TestAllTypes_unionField;
struct TestAllTypes;
struct TestAllTypes_ptr;
enum TestDefaults_unionField;
struct TestDefaults;
struct TestDefaults_ptr;

extern const int boolConst;
extern const int8_t int8Const;
extern const int16_t int16Const;
extern const int32_t int32Const;
extern const int64_t int64Const;
extern const uint8_t uInt8Const;
extern const uint16_t uInt16Const;
extern const uint32_t uInt32Const;
extern const uint64_t uInt64Const;
extern const float float32Const;
extern const double float64Const;
extern const struct capn_text textConst;
extern const struct capn_data dataConst;
extern const struct TestAllTypes_ptr structConst;
extern const enum TestEnum enumConst;
extern const struct capn_ptr voidListConst;
extern const struct capn_list1 boolListConst;
extern const struct capn_list8 int8ListConst;
extern const struct capn_list16 int16ListConst;
extern const struct capn_list32 int32ListConst;
extern const struct capn_list64 int64ListConst;
extern const struct capn_list8 uInt8ListConst;
extern const struct capn_list16 uInt16ListConst;
extern const struct capn_list32 uInt32ListConst;
extern const struct capn_list64 uInt64ListConst;
extern const struct capn_list32 float32ListConst;
extern const struct capn_list64 float64ListConst;
extern const struct capn_ptr textListConst;
extern const struct capn_ptr dataListConst;
extern const struct capn_ptr structListConst;
extern const struct capn_list16 enumListConst;

struct TestInterface_testMultiRet_ret {
	uint16_t v;
	struct capn_text ret1;
};

struct TestInterface_vt {
	void (*marshal)(const struct TestInterface *, struct capn_ptr*, int /*off*/);
	struct TestAllTypes_ptr (*testMethod1)(struct TestInterface*, int v, struct capn_text arg1, uint16_t arg2);
	int8_t (*testMethod0)(struct TestInterface*, struct TestInterface arg0);
	void (*testMethod2)(struct TestInterface*, struct TestInterface arg0);
	struct TestInterface_testMultiRet_ret (*testMultiRet)(struct TestInterface*, int arg0, struct capn_text arg1);
};

struct TestInterface {
	const struct TestInterface_vt *vt;
	struct capn_ptr p;
	void *u;
};

enum TestEnum {
	TestEnum_FOO = 1,
	TestEnum_BAR = 2
};

enum TestAllTypes_unionField {
	TestAllTypes_voidUnion = 35,
	TestAllTypes_boolUnion = 36,
	TestAllTypes_int8Union = 37,
	TestAllTypes_uint8Union = 38,
	TestAllTypes_int16Union = 39,
	TestAllTypes_uint16Union = 40,
	TestAllTypes_int32Union = 41,
	TestAllTypes_uint32Union = 42,
	TestAllTypes_int64Union = 43,
	TestAllTypes_uint64Union = 44,
	TestAllTypes_float32Union = 45,
	TestAllTypes_float64Union = 46,
	TestAllTypes_textUnion = 47,
	TestAllTypes_dataUnion = 48,
	TestAllTypes_structUnion = 49,
	TestAllTypes_enumUnion = 50,
	TestAllTypes_interfaceUnion = 51
};

struct TestAllTypes_ptr {
	struct capn_ptr p;
};

struct TestAllTypes_ptr new_TestAllTypes(struct capn_segment*);
struct capn_ptr new_TestAllTypes_list(struct capn_segment*, int sz);
int read_TestAllTypes(const struct TestAllTypes_ptr*, struct TestAllTypes*);
int write_TestAllTypes(struct TestAllTypes_ptr*, const struct TestAllTypes*);

struct TestAllTypes {
	unsigned int boolField : 1;
	int8_t int8Field;
	int16_t int16Field;
	int32_t int32Field;
	int64_t int64Field;
	uint8_t uInt8Field;
	uint16_t uInt16Field;
	uint32_t uInt32Field;
	uint64_t uInt64Field;
	float float32Field;
	double float64Field;
	struct capn_text textField;
	struct capn_data dataField;
	struct TestAllTypes_ptr structField;
	enum TestEnum enumField;
	struct TestInterface interfaceField;
	struct capn_ptr voidList;
	struct capn_list1 boolList;
	struct capn_list8 int8List;
	struct capn_list16 int16List;
	struct capn_list32 int32List;
	struct capn_list64 int64List;
	struct capn_list8 uInt8List;
	struct capn_list16 uInt16List;
	struct capn_list32 uInt32List;
	struct capn_list64 uInt64List;
	struct capn_list32 float32List;
	struct capn_list64 float64List;
	struct capn_ptr textList;
	struct capn_ptr dataList;
	struct capn_ptr structList;
	struct capn_list16 enumList;
	struct capn_ptr interfaceList;
	enum TestAllTypes_unionField unionField_tag;
	union {
		unsigned int boolUnion : 1;
		int8_t int8Union;
		uint8_t uint8Union;
		int16_t int16Union;
		uint16_t uint16Union;
		int32_t int32Union;
		uint32_t uint32Union;
		int64_t int64Union;
		uint64_t uint64Union;
		float float32Union;
		double float64Union;
		struct capn_text textUnion;
		struct capn_data dataUnion;
		struct TestAllTypes_ptr structUnion;
		enum TestEnum enumUnion;
		struct TestInterface interfaceUnion;
	} unionField;
};

enum TestDefaults_unionField {
	TestDefaults_voidUnion = 35,
	TestDefaults_boolUnion = 36,
	TestDefaults_int8Union = 37,
	TestDefaults_uint8Union = 38,
	TestDefaults_int16Union = 39,
	TestDefaults_uint16Union = 40,
	TestDefaults_int32Union = 41,
	TestDefaults_uint32Union = 42,
	TestDefaults_int64Union = 43,
	TestDefaults_uint64Union = 44,
	TestDefaults_float32Union = 45,
	TestDefaults_float64Union = 46,
	TestDefaults_textUnion = 47,
	TestDefaults_dataUnion = 48,
	TestDefaults_structUnion = 49,
	TestDefaults_enumUnion = 50,
	TestDefaults_interfaceUnion = 51
};

struct TestDefaults_ptr {
	struct capn_ptr p;
};

struct TestDefaults_ptr new_TestDefaults(struct capn_segment*);
struct capn_ptr new_TestDefaults_list(struct capn_segment*, int sz);
int read_TestDefaults(const struct TestDefaults_ptr*, struct TestDefaults*);
int write_TestDefaults(struct TestDefaults_ptr*, const struct TestDefaults*);

struct TestDefaults {
	unsigned int boolField : 1;
	int8_t int8Field;
	int16_t int16Field;
	int32_t int32Field;
	int64_t int64Field;
	uint8_t uInt8Field;
	uint16_t uInt16Field;
	uint32_t uInt32Field;
	uint64_t uInt64Field;
	float float32Field;
	double float64Field;
	struct capn_text textField;
	struct capn_data dataField;
	struct TestAllTypes_ptr structField;
	enum TestEnum enumField;
	/* interface can't have a default */
	struct TestInterface interfaceField;
	struct capn_ptr voidList;
	struct capn_list1 boolList;
	struct capn_list8 int8List;
	struct capn_list16 int16List;
	struct capn_list32 int32List;
	struct capn_list64 int64List;
	struct capn_list8 uInt8List;
	struct capn_list16 uInt16List;
	struct capn_list32 uInt32List;
	struct capn_list64 uInt64List;
	struct capn_list32 float32List;
	struct capn_list64 float64List;
	struct capn_ptr textList;
	struct capn_ptr dataList;
	struct capn_ptr structList;
	struct capn_list16 enumList;
	struct capn_ptr interfaceList;
	enum TestDefaults_unionField unionField_tag;
	union {
		unsigned int boolUnion : 1;
		int8_t int8Union;
		uint8_t uint8Union;
		int16_t int16Union;
		uint16_t uint16Union;
		int32_t int32Union;
		uint32_t uint32Union;
		int64_t int64Union;
		uint64_t uint64Union;
		float float32Union;
		double float64Union;
		struct capn_text textUnion;
		struct capn_data dataUnion;
		struct TestAllTypes_ptr structUnion;
		enum TestEnum enumUnion;
		struct TestInterface interfaceUnion;
	} unionField;
};
#endif
